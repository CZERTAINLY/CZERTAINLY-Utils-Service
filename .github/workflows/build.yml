name: Build
on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  check:
    if: github.event_name != 'push'
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: mvn -B -U verify
  build:
    if: github.event_name != 'pull_request'
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B -U verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      - name: Checkout docs repo
        uses: actions/checkout@v3
        with:
          repository: 3KeyCompany/CZERTAINLY-Interface-Documentation
          token: ${{ secrets.GH_ACTIONS_PERSONAL_ACCESS_TOKEN }}
          path: docs
          ref: gh-pages
      - name: Copy OpenAPI
        run: |
          mkdir -p docs/utils/$GITHUB_REF_NAME
          cp -R openapi/utils-service.yaml docs/utils/$GITHUB_REF_NAME
      - name: Commit to docs
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'interfaces@users.noreply.github.com'
          git add -A
          if [ -n "$(git status --porcelain)" ]; then
            echo "there are changes";
            git commit -am "Automatically generated utils docs"
            git push
          else
            echo "no changes";
          fi